content_assist_disabled_computers=org.eclipse.jdt.ui.textProposalCategory\u0000org.eclipse.jdt.ui.javaPostfixProposalCategory\u0000org.eclipse.jdt.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\u0000org.eclipse.jdt.ui.javaNoTypeProposalCategory\u0000org.eclipse.jdt.ui.javaChainProposalCategory\u0000
content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"><lhs name\="java.util.Date"><rhs name\="java.sql.Date"/></lhs><lhs name\="java.lang.Cloneable"><rhs name\="java.sql.Date"/><rhs name\="org.json.simple.JSONObject"/></lhs><lhs name\="java.sql.Date"><rhs name\="java.sql.Date"/></lhs><lhs name\="java.util.Map"><rhs name\="org.json.simple.JSONObject"/></lhs><lhs name\="org.json.simple.JSONAware"><rhs name\="org.json.simple.JSONObject"/></lhs><lhs name\="org.json.simple.JSONStreamAware"><rhs name\="org.json.simple.JSONObject"/></lhs><lhs name\="java.util.HashMap"><rhs name\="org.json.simple.JSONObject"/></lhs><lhs name\="java.util.AbstractMap"><rhs name\="org.json.simple.JSONObject"/></lhs><lhs name\="org.json.simple.JSONObject"><rhs name\="org.json.simple.JSONObject"/></lhs><lhs name\="vo.MemberVo"><rhs name\="vo.MemberVo"/></lhs><lhs name\="com.oreilly.servlet.MultipartRequest"><rhs name\="com.oreilly.servlet.MultipartRequest"/></lhs><lhs name\="com.oreilly.servlet.multipart.FileRenamePolicy"><rhs name\="com.oreilly.servlet.multipart.DefaultFileRenamePolicy"/></lhs></history>
content_assist_number_of_computers=20
content_assist_proposals_background=255,255,255
content_assist_proposals_foreground=0,0,0
eclipse.preferences.version=1
org.eclipse.jdt.internal.ui.navigator.layout=2
org.eclipse.jdt.internal.ui.navigator.librariesnode=true
org.eclipse.jdt.ui.formatterprofiles.version=21
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="_select_list">\t//\uC804\uCCB4\uC870\uD68C&\#13;\r\n\tpublic List&lt;${argType}&gt; selectList(){&\#13;\r\n\t\t&\#13;\r\n\t\tList&lt;${argType}&gt; list \= new ArrayList&lt;${argType}&gt;();&\#13;\r\n\t\t&\#13;\r\n\t\tConnection        conn  \= null; //null\uC744 \uC77C\uBD80\uB85C \uCD08\uAE30\uAC12\uC73C\uB85C \uC124\uC815&\#13;\r\n\t\tPreparedStatement pstmt \= null;&\#13;\r\n\t\tResultSet         rs    \= null;&\#13;\r\n\t\tString            sql   \= "";&\#13;\r\n\t\t&\#13;\r\n\t\ttry {&\#13;\r\n\t\t\t&\#13;\r\n\t\t\t//1. Connection \uC5BB\uC5B4\uC624\uAE30&\#13;\r\n\t\t\tconn \= DBService.getInstance().getConnection();&\#13;\r\n\t\t\t&\#13;\r\n\t\t\t//2. PreparedStatment \uC5BB\uC5B4\uC624\uAE30&\#13;\r\n\t\t\tpstmt \= conn.prepareStatement(sql);&\#13;\r\n\t\t\t&\#13;\r\n\t\t\t//3. ResultSet \uC5BB\uC5B4\uC624\uAE30&\#13;\r\n\t\t\trs \= pstmt.executeQuery();&\#13;\r\n\t\t\t&\#13;\r\n\t\t\t//4. \uD3EC\uC7A5 (record -&gt; Vo -&gt; list)&\#13;\r\n\t\t\twhile (rs.next()) {&\#13;\r\n\t\t\t\t&\#13;\r\n\t\t\t\t//rs\uAC00 \uAC00\uB9AC\uD0A4\uB294 \uB808\uCF54\uB4DC(\uD589)\uC758 \uAC12\uC744 \uC77D\uC5B4\uC624\uAE30&\#13;\r\n\t\t\t\t&\#13;\r\n\t\t\t\t&\#13;\r\n\t\t\t\t//Vo\uB85C \uD3EC\uC7A5&\#13;\r\n\t\t\t\t${argType} vo \= new ${argType}();&\#13;\r\n\t\t\t\t&\#13;\r\n\t\t\t\t&\#13;\r\n\t\t\t\t//list\uC5D0 \uCD94\uAC00&\#13;\r\n\t\t\t\tlist.add(vo);&\#13;\r\n\t\t\t\t&\#13;\r\n\t\t\t}&\#13;\r\n\t\t\t&\#13;\r\n\t\t\t&\#13;\r\n\t\t} catch (Exception e) {&\#13;\r\n\t\t\t&\#13;\r\n\t\t\te.printStackTrace();&\#13;\r\n\t\t\t&\#13;\r\n\t\t} finally{&\#13;\r\n\t\t\t&\#13;\r\n\t\t\t&\#13;\r\n\t\t\ttry {&\#13;\r\n\t\t\t\t//\uC5F0\uACB0(\uC0DD\uC131)\uB418\uC5B4 \uC788\uC744 \uC2DC, close  --why? \uB2E4\uC74C \uBA85\uB839 \uC704\uD574 \uC5F0\uACB0 \uD574\uC81C&\#13;\r\n\t\t\t\tif (rs \!\= null) rs.close();&\#13;\r\n\t\t\t\t&\#13;\r\n\t\t\t\tif (pstmt \!\= null) pstmt.close();&\#13;\r\n\t\t\t\t&\#13;\r\n\t\t\t\tif (conn \!\= null) conn.close();&\#13;\r\n\t\t\t\t&\#13;\r\n\t\t\t} catch (SQLException e) {&\#13;\r\n\t\t\t\t// TODO Auto-generated catch block&\#13;\r\n\t\t\t\te.printStackTrace();&\#13;\r\n\t\t\t}&\#13;\r\n\t\t\t\t&\#13;\r\n\t\t\t&\#13;\r\n\t\t}&\#13;\r\n\t\t&\#13;\r\n\t\treturn list;&\#13;\r\n\t\t&\#13;\r\n\t}</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="_forward_servlet">import java.io.IOException;&\#13;\r\nimport javax.servlet.RequestDispatcher;&\#13;\r\nimport javax.servlet.ServletException;&\#13;\r\nimport javax.servlet.annotation.WebServlet;&\#13;\r\nimport javax.servlet.http.HttpServlet;&\#13;\r\nimport javax.servlet.http.HttpServletRequest;&\#13;\r\nimport javax.servlet.http.HttpServletResponse;&\#13;\r\n&\#13;\r\n/**&\#13;\r\n * Servlet implementation class ${primary_type_name}&\#13;\r\n */&\#13;\r\n@WebServlet("${cursor}")&\#13;\r\npublic class ${primary_type_name} extends HttpServlet {&\#13;\r\n\tprivate static final long serialVersionUID \= 1L;&\#13;\r\n       &\#13;\r\n    /**&\#13;\r\n     * @see HttpServlet\#HttpServlet()&\#13;\r\n     */&\#13;\r\n    public ${primary_type_name}() {&\#13;\r\n        super();&\#13;\r\n        // TODO Auto-generated constructor stub&\#13;\r\n    }&\#13;\r\n&\#13;\r\n\t/**&\#13;\r\n\t * @see HttpServlet\#service(HttpServletRequest request, HttpServletResponse response)&\#13;\r\n\t */&\#13;\r\n\tprotected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {&\#13;\r\n\t\t&\#13;\r\n\t\t//&\#13;\r\n\t\t&\#13;\r\n\t\t//forward&\#13;\r\n\t\tString forward_page \= "/";&\#13;\r\n\t\tRequestDispatcher disp \= request.getRequestDispatcher(forward_page);&\#13;\r\n\t\tdisp.forward(request, response);&\#13;\r\n\t}&\#13;\r\n&\#13;\r\n}&\#13;\r\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="_select_One">\t//idx\uC5D0 \uD574\uB2F9\uB418\uB294 \uAC1D\uCCB4 1\uAC74 \uAD6C\uD558\uAE30&\#13;\r\n\tpublic ${argType} selectOne(int idx) {&\#13;\r\n&\#13;\r\n\t\t${argType} vo \= null;&\#13;\r\n\t\tConnection conn \= null; //null\uC744 \uC77C\uBD80\uB85C \uCD08\uAE30\uAC12\uC73C\uB85C \uC124\uC815&\#13;\r\n\t\tPreparedStatement pstmt \= null;&\#13;\r\n\t\tResultSet rs \= null;&\#13;\r\n\t\tString sql \= "";&\#13;\r\n&\#13;\r\n\t\ttry {&\#13;\r\n&\#13;\r\n\t\t\t//1. Connection \uC5BB\uC5B4\uC624\uAE30&\#13;\r\n\t\t\tconn \= DBService.getInstance().getConnection();&\#13;\r\n&\#13;\r\n\t\t\t//2. PreparedStatment \uC5BB\uC5B4\uC624\uAE30&\#13;\r\n\t\t\tpstmt \= conn.prepareStatement(sql);&\#13;\r\n\t\t\t&\#13;\r\n\t\t\t//3. pstmt \uC138\uD305&\#13;\r\n\t\t\tpstmt.setInt(1, idx);&\#13;\r\n&\#13;\r\n\t\t\t//4. ResultSet \uC5BB\uC5B4\uC624\uAE30&\#13;\r\n\t\t\trs \= pstmt.executeQuery();&\#13;\r\n&\#13;\r\n\t\t\t//5. \uD3EC\uC7A5 (record -&gt; Vo)&\#13;\r\n\t\t\tif (rs.next()) {&\#13;\r\n&\#13;\r\n\t\t\t\t//Vo\uB85C \uD3EC\uC7A5&\#13;\r\n\t\t\t\tvo \= new ${argType}();&\#13;\r\n&\#13;\r\n\t\t\t}&\#13;\r\n&\#13;\r\n\t\t} catch (Exception e) {&\#13;\r\n&\#13;\r\n\t\t\te.printStackTrace();&\#13;\r\n&\#13;\r\n\t\t} finally {&\#13;\r\n&\#13;\r\n\t\t\ttry {&\#13;\r\n\t\t\t\t//\uC5F0\uACB0(\uC0DD\uC131)\uB418\uC5B4 \uC788\uC744 \uC2DC, close  --why? \uB2E4\uC74C \uBA85\uB839 \uC704\uD574 \uC5F0\uACB0 \uD574\uC81C&\#13;\r\n\t\t\t\tif (rs \!\= null)&\#13;\r\n\t\t\t\t\trs.close();&\#13;\r\n&\#13;\r\n\t\t\t\tif (pstmt \!\= null)&\#13;\r\n\t\t\t\t\tpstmt.close();&\#13;\r\n&\#13;\r\n\t\t\t\tif (conn \!\= null)&\#13;\r\n\t\t\t\t\tconn.close();&\#13;\r\n&\#13;\r\n\t\t\t} catch (SQLException e) {&\#13;\r\n\t\t\t\t// TODO Auto-generated catch block&\#13;\r\n\t\t\t\te.printStackTrace();&\#13;\r\n\t\t\t}&\#13;\r\n&\#13;\r\n\t\t}&\#13;\r\n&\#13;\r\n\t\treturn vo;&\#13;\r\n&\#13;\r\n\t}</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="_singleton">\tstatic ${primary_type_name} single \= null;&\#13;\r\n\t&\#13;\r\n\tpublic static ${primary_type_name} getInstance() {&\#13;\r\n\t\tif (single \=\= null)&\#13;\r\n\t\t\tsingle \= new ${primary_type_name}();&\#13;\r\n\t\treturn single;&\#13;\r\n\t}&\#13;\r\n\t&\#13;\r\n\t//\uC678\uBD80\uC5D0\uC11C \uC0DD\uC131\uD558\uC9C0 \uB9D0\uAC83&\#13;\r\n\tprivate ${primary_type_name}() {&\#13;\r\n\t\t&\#13;\r\n\t}</template><template autoinsert\="true" context\="java" deleted\="false" description\="insert/update/delete Data to/from table" enabled\="true" name\="_insert_update_delete">\tpublic int insert_update_delete(${cursor} vo) {&\#13;\r\n\t\tint res \= 0; &\#13;\r\n\t\t&\#13;\r\n\t\tConnection        conn  \= null;&\#13;\r\n\t\tPreparedStatement pstmt \= null;                                  &\#13;\r\n\t\tString            sql   \= "";&\#13;\r\n\t\t&\#13;\r\n\t\ttry {&\#13;\r\n\t\t\t//1. Connection \uC5BB\uC5B4\uC624\uAE30&\#13;\r\n\t\t\tconn \= DBService.getInstance().getConnection();&\#13;\r\n\t\t\t&\#13;\r\n\t\t\t//2. PreparedStatment \uC5BB\uC5B4\uC624\uAE30&\#13;\r\n\t\t\tpstmt \= conn.prepareStatement(sql);&\#13;\r\n\t\t\t&\#13;\r\n\t\t\t//3. parameter \uC138\uD305 [[ \uB370\uC774\uD130 \uD0C0\uC785\uC5D0 \uB9DE\uCD94\uC5B4 \uC138\uD305\uD574\uC57C\uD568 ]]&\#13;\r\n\t\t\t&\#13;\r\n\t\t\t&\#13;\r\n\t\t\t//3. DML(insert/update/delete) \: res &lt;- \uCC98\uB9AC\uB41C \uD589\uC218\uB97C \uBC18\uD658&\#13;\r\n\t\t\tres \= pstmt.executeUpdate();&\#13;\r\n&\#13;\r\n\t\t} catch (Exception e) {&\#13;\r\n\t\t\t&\#13;\r\n\t\t\te.printStackTrace();&\#13;\r\n\t\t\t&\#13;\r\n\t\t} finally {&\#13;\r\n\t\t\t&\#13;\r\n\t\t\t//\uB2EB\uAE30 (\uC5F4\uB9B0 \uC5ED\uC21C\uC73C\uB85C)&\#13;\r\n\t\t\ttry {&\#13;\r\n\t\t\t\tif (pstmt \!\= null) pstmt.close();&\#13;\r\n\t\t\t\tif (conn \!\= null) conn.close();&\#13;\r\n\t\t\t} catch (SQLException e2) {&\#13;\r\n\t\t\t\te2.printStackTrace();&\#13;\r\n\t\t\t}&\#13;\r\n\t\t\t&\#13;\r\n\t\t}&\#13;\r\n\t\t&\#13;\r\n\t\treturn res;&\#13;\r\n\t\t&\#13;\r\n\t}//end insert()</template></templates>
spelling_locale_initialized=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
